ARM GAS  /tmp/cc6mZyF8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Core/Src/stm32f4xx_it.c **** #include "task.h"
  26:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc6mZyF8.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Core/Src/stm32f4xx_it.c **** 
  62:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /**
  70:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f4xx_it.c ****   */
  72:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  74:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f4xx_it.c **** 
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f4xx_it.c ****   HAL_RCC_NMI_IRQHandler();
ARM GAS  /tmp/cc6mZyF8.s 			page 3


  39              		.loc 1 77 3 view .LVU1
  40 0002 FFF7FEFF 		bl	HAL_RCC_NMI_IRQHandler
  41              	.LVL0:
  42              	.L2:
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f4xx_it.c ****   while (1)
  43              		.loc 1 79 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f4xx_it.c ****   {
  81:Core/Src/stm32f4xx_it.c ****   }
  44              		.loc 1 81 3 discriminator 1 view .LVU3
  79:Core/Src/stm32f4xx_it.c ****   {
  45              		.loc 1 79 9 discriminator 1 view .LVU4
  46 0006 FEE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE134:
  50              		.section	.text.HardFault_Handler,"ax",%progbits
  51              		.align	1
  52              		.global	HardFault_Handler
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	HardFault_Handler:
  59              	.LFB135:
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c **** }
  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c **** /**
  86:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f4xx_it.c ****   */
  88:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f4xx_it.c **** {
  60              		.loc 1 89 1 view -0
  61              		.cfi_startproc
  62              		@ Volatile: function does not return.
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.L5:
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c **** 
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****   while (1)
  67              		.loc 1 93 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f4xx_it.c ****   {
  95:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   }
  68              		.loc 1 97 3 discriminator 1 view .LVU7
  93:Core/Src/stm32f4xx_it.c ****   {
  69              		.loc 1 93 9 discriminator 1 view .LVU8
  70 0000 FEE7     		b	.L5
  71              		.cfi_endproc
  72              	.LFE135:
  74              		.section	.text.MemManage_Handler,"ax",%progbits
  75              		.align	1
  76              		.global	MemManage_Handler
ARM GAS  /tmp/cc6mZyF8.s 			page 4


  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	MemManage_Handler:
  83              	.LFB136:
  98:Core/Src/stm32f4xx_it.c **** }
  99:Core/Src/stm32f4xx_it.c **** 
 100:Core/Src/stm32f4xx_it.c **** /**
 101:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f4xx_it.c ****   */
 103:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f4xx_it.c **** {
  84              		.loc 1 104 1 view -0
  85              		.cfi_startproc
  86              		@ Volatile: function does not return.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.L7:
 105:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c **** 
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   while (1)
  91              		.loc 1 108 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f4xx_it.c ****   {
 110:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   }
  92              		.loc 1 112 3 discriminator 1 view .LVU11
 108:Core/Src/stm32f4xx_it.c ****   {
  93              		.loc 1 108 9 discriminator 1 view .LVU12
  94 0000 FEE7     		b	.L7
  95              		.cfi_endproc
  96              	.LFE136:
  98              		.section	.text.BusFault_Handler,"ax",%progbits
  99              		.align	1
 100              		.global	BusFault_Handler
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	BusFault_Handler:
 107              	.LFB137:
 113:Core/Src/stm32f4xx_it.c **** }
 114:Core/Src/stm32f4xx_it.c **** 
 115:Core/Src/stm32f4xx_it.c **** /**
 116:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32f4xx_it.c ****   */
 118:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f4xx_it.c **** {
 108              		.loc 1 119 1 view -0
 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
ARM GAS  /tmp/cc6mZyF8.s 			page 5


 114              	.L9:
 120:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c **** 
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   while (1)
 115              		.loc 1 123 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f4xx_it.c ****   {
 125:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   }
 116              		.loc 1 127 3 discriminator 1 view .LVU15
 123:Core/Src/stm32f4xx_it.c ****   {
 117              		.loc 1 123 9 discriminator 1 view .LVU16
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE137:
 122              		.section	.text.UsageFault_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	UsageFault_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	UsageFault_Handler:
 131              	.LFB138:
 128:Core/Src/stm32f4xx_it.c **** }
 129:Core/Src/stm32f4xx_it.c **** 
 130:Core/Src/stm32f4xx_it.c **** /**
 131:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f4xx_it.c ****   */
 133:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f4xx_it.c **** {
 132              		.loc 1 134 1 view -0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.L11:
 135:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c **** 
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   while (1)
 139              		.loc 1 138 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f4xx_it.c ****   {
 140:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   }
 140              		.loc 1 142 3 discriminator 1 view .LVU19
 138:Core/Src/stm32f4xx_it.c ****   {
 141              		.loc 1 138 9 discriminator 1 view .LVU20
 142 0000 FEE7     		b	.L11
 143              		.cfi_endproc
 144              	.LFE138:
 146              		.section	.text.DebugMon_Handler,"ax",%progbits
 147              		.align	1
 148              		.global	DebugMon_Handler
ARM GAS  /tmp/cc6mZyF8.s 			page 6


 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	DebugMon_Handler:
 155              	.LFB139:
 143:Core/Src/stm32f4xx_it.c **** }
 144:Core/Src/stm32f4xx_it.c **** 
 145:Core/Src/stm32f4xx_it.c **** /**
 146:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f4xx_it.c ****   */
 148:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f4xx_it.c **** {
 156              		.loc 1 149 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c **** 
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** }
 161              		.loc 1 156 1 view .LVU22
 162 0000 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE139:
 166              		.section	.text.SysTick_Handler,"ax",%progbits
 167              		.align	1
 168              		.global	SysTick_Handler
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	SysTick_Handler:
 175              	.LFB140:
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c **** /**
 159:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 160:Core/Src/stm32f4xx_it.c ****   */
 161:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 162:Core/Src/stm32f4xx_it.c **** {
 176              		.loc 1 162 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 166:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
ARM GAS  /tmp/cc6mZyF8.s 			page 7


 185              		.loc 1 166 3 view .LVU24
 186 0002 FFF7FEFF 		bl	HAL_IncTick
 187              	.LVL1:
 167:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 168:Core/Src/stm32f4xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 188              		.loc 1 168 3 view .LVU25
 189              		.loc 1 168 7 is_stmt 0 view .LVU26
 190 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
 191              	.LVL2:
 192              		.loc 1 168 6 view .LVU27
 193 000a 0128     		cmp	r0, #1
 194 000c 00D1     		bne	.L16
 195              	.L13:
 169:Core/Src/stm32f4xx_it.c ****   {
 170:Core/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 171:Core/Src/stm32f4xx_it.c ****   xPortSysTickHandler();
 172:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 173:Core/Src/stm32f4xx_it.c ****   }
 174:Core/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** }
 196              		.loc 1 178 1 view .LVU28
 197 000e 08BD     		pop	{r3, pc}
 198              	.L16:
 171:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 199              		.loc 1 171 3 is_stmt 1 view .LVU29
 200 0010 FFF7FEFF 		bl	xPortSysTickHandler
 201              	.LVL3:
 202              		.loc 1 178 1 is_stmt 0 view .LVU30
 203 0014 FBE7     		b	.L13
 204              		.cfi_endproc
 205              	.LFE140:
 207              		.text
 208              	.Letext0:
 209              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 210              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 211              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 212              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 213              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 214              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 215              		.file 8 "Core/Inc/FreeRTOSConfig.h"
 216              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  /tmp/cc6mZyF8.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc6mZyF8.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc6mZyF8.s:51     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:58     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc6mZyF8.s:75     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:82     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc6mZyF8.s:99     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:106    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc6mZyF8.s:123    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:130    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc6mZyF8.s:147    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:154    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc6mZyF8.s:167    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc6mZyF8.s:174    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_RCC_NMI_IRQHandler
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
