ARM GAS  /tmp/cckIaVSD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cckIaVSD.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c ****  
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_up;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f4xx_it.c **** /**
  69:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f4xx_it.c ****   */
  71:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  73:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f4xx_it.c **** 
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32f4xx_it.c **** 
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f4xx_it.c **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/cckIaVSD.s 			page 3


  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  80:Core/Src/stm32f4xx_it.c **** 
  81:Core/Src/stm32f4xx_it.c **** /**
  82:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32f4xx_it.c ****   */
  84:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 85 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32f4xx_it.c **** 
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 89 3 discriminator 1 view .LVU3
  90:Core/Src/stm32f4xx_it.c ****   {
  91:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****   }
  57              		.loc 1 93 3 discriminator 1 view .LVU4
  89:Core/Src/stm32f4xx_it.c ****   {
  58              		.loc 1 89 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE131:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB132:
  94:Core/Src/stm32f4xx_it.c **** }
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c **** /**
  97:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32f4xx_it.c ****   */
  99:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 100:Core/Src/stm32f4xx_it.c **** {
  73              		.loc 1 100 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
ARM GAS  /tmp/cckIaVSD.s 			page 4


  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 101:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c **** 
 103:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c ****   while (1)
  80              		.loc 1 104 3 discriminator 1 view .LVU7
 105:Core/Src/stm32f4xx_it.c ****   {
 106:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   }
  81              		.loc 1 108 3 discriminator 1 view .LVU8
 104:Core/Src/stm32f4xx_it.c ****   {
  82              		.loc 1 104 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB133:
 109:Core/Src/stm32f4xx_it.c **** }
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c **** /**
 112:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Core/Src/stm32f4xx_it.c ****   */
 114:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32f4xx_it.c **** {
  97              		.loc 1 115 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 116:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c ****   while (1)
 104              		.loc 1 119 3 discriminator 1 view .LVU11
 120:Core/Src/stm32f4xx_it.c ****   {
 121:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   }
 105              		.loc 1 123 3 discriminator 1 view .LVU12
 119:Core/Src/stm32f4xx_it.c ****   {
 106              		.loc 1 119 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE133:
ARM GAS  /tmp/cckIaVSD.s 			page 5


 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB134:
 124:Core/Src/stm32f4xx_it.c **** }
 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c **** /**
 127:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32f4xx_it.c ****   */
 129:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 130 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 131:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 134 3 discriminator 1 view .LVU15
 135:Core/Src/stm32f4xx_it.c ****   {
 136:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 138 3 discriminator 1 view .LVU16
 134:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 134 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB135:
 139:Core/Src/stm32f4xx_it.c **** }
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c **** /**
 142:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32f4xx_it.c ****   */
 144:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32f4xx_it.c **** {
 145              		.loc 1 145 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cckIaVSD.s 			page 6


 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 146:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32f4xx_it.c **** 
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32f4xx_it.c **** }
 150              		.loc 1 152 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE135:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB136:
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c **** /**
 155:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32f4xx_it.c ****   */
 157:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32f4xx_it.c **** {
 165              		.loc 1 158 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32f4xx_it.c **** }
 170              		.loc 1 165 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE136:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB137:
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c **** /**
 168:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cckIaVSD.s 			page 7


 170:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 171:Core/Src/stm32f4xx_it.c **** {
 185              		.loc 1 171 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** }
 190              		.loc 1 178 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE137:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB138:
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c **** /**
 181:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32f4xx_it.c ****   */
 183:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32f4xx_it.c **** {
 205              		.loc 1 184 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32f4xx_it.c **** 
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 188 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** }
 217              		.loc 1 192 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE138:
ARM GAS  /tmp/cckIaVSD.s 			page 8


 222              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	TIM2_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	TIM2_IRQHandler:
 231              	.LFB139:
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 195:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 196:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 199:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f4xx_it.c **** 
 201:Core/Src/stm32f4xx_it.c **** /**
 202:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 203:Core/Src/stm32f4xx_it.c ****   */
 204:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 205:Core/Src/stm32f4xx_it.c **** {
 232              		.loc 1 205 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 10B5     		push	{r4, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 209:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 241              		.loc 1 209 3 view .LVU28
 242 0002 214C     		ldr	r4, .L22
 243 0004 2046     		mov	r0, r4
 244 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 245              	.LVL1:
 210:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 211:Core/Src/stm32f4xx_it.c ****   __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_CC3); // uncomment HAL_TIM_IRQHandler(&htim2); ^^
 246              		.loc 1 211 3 view .LVU29
 247 000a 2368     		ldr	r3, [r4]
 248 000c 6FF00802 		mvn	r2, #8
 249 0010 1A61     		str	r2, [r3, #16]
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   VGA.hsync_cnt++;
 250              		.loc 1 213 3 view .LVU30
 251              		.loc 1 213 6 is_stmt 0 view .LVU31
 252 0012 1E4A     		ldr	r2, .L22+4
 253 0014 1388     		ldrh	r3, [r2]
 254              		.loc 1 213 16 view .LVU32
 255 0016 0133     		adds	r3, r3, #1
 256 0018 9BB2     		uxth	r3, r3
 257 001a 1380     		strh	r3, [r2]	@ movhi
 214:Core/Src/stm32f4xx_it.c ****   if (VGA.hsync_cnt >= VGA_VSYNC_PERIODE)
ARM GAS  /tmp/cckIaVSD.s 			page 9


 258              		.loc 1 214 3 is_stmt 1 view .LVU33
 259              		.loc 1 214 6 is_stmt 0 view .LVU34
 260 001c B3F5037F 		cmp	r3, #524
 261 0020 04D9     		bls	.L16
 215:Core/Src/stm32f4xx_it.c ****   {
 216:Core/Src/stm32f4xx_it.c ****     // -----------
 217:Core/Src/stm32f4xx_it.c ****     VGA.hsync_cnt = 0;
 262              		.loc 1 217 5 is_stmt 1 view .LVU35
 263              		.loc 1 217 19 is_stmt 0 view .LVU36
 264 0022 1346     		mov	r3, r2
 265 0024 0022     		movs	r2, #0
 266 0026 1A80     		strh	r2, [r3]	@ movhi
 218:Core/Src/stm32f4xx_it.c ****     // Adresspointer first dot
 219:Core/Src/stm32f4xx_it.c ****     VGA.start_adr = (uint32_t)(&VGA_RAM1[0]);
 267              		.loc 1 219 5 is_stmt 1 view .LVU37
 268              		.loc 1 219 21 is_stmt 0 view .LVU38
 269 0028 194A     		ldr	r2, .L22+8
 270              		.loc 1 219 19 view .LVU39
 271 002a 5A60     		str	r2, [r3, #4]
 272              	.L16:
 220:Core/Src/stm32f4xx_it.c ****   }
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c ****   // HSync-Pixel
 223:Core/Src/stm32f4xx_it.c ****   GPIOB->BSRR = (VGA.hsync_cnt < VGA_VSYNC_IMP) ? VGA_VSYNC_Pin << 16u: VGA_VSYNC_Pin;
 273              		.loc 1 223 3 is_stmt 1 view .LVU40
 274              		.loc 1 223 21 is_stmt 0 view .LVU41
 275 002c 174B     		ldr	r3, .L22+4
 276 002e 1B88     		ldrh	r3, [r3]
 277              		.loc 1 223 71 view .LVU42
 278 0030 012B     		cmp	r3, #1
 279 0032 25D9     		bls	.L21
 280 0034 4FF48051 		mov	r1, #4096
 281              	.L17:
 282              		.loc 1 223 15 discriminator 4 view .LVU43
 283 0038 164A     		ldr	r2, .L22+12
 284 003a 9161     		str	r1, [r2, #24]
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c ****   // Test for DMA start
 226:Core/Src/stm32f4xx_it.c ****   if((VGA.hsync_cnt >= VGA_VSYNC_BILD_START) && (VGA.hsync_cnt <= VGA_VSYNC_BILD_STOP))
 285              		.loc 1 226 3 is_stmt 1 discriminator 4 view .LVU44
 286              		.loc 1 226 46 is_stmt 0 discriminator 4 view .LVU45
 287 003c 243B     		subs	r3, r3, #36
 288 003e 9BB2     		uxth	r3, r3
 289              		.loc 1 226 5 discriminator 4 view .LVU46
 290 0040 B3F5EF7F 		cmp	r3, #478
 291 0044 1BD8     		bhi	.L15
 227:Core/Src/stm32f4xx_it.c ****   {
 228:Core/Src/stm32f4xx_it.c ****     // after FP start => DMA Transfer
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****     // DMA2 init
 231:Core/Src/stm32f4xx_it.c **** 	  DMA2_Stream5->CR = VGA.dma2_cr_reg;
 292              		.loc 1 231 4 is_stmt 1 view .LVU47
 293              		.loc 1 231 26 is_stmt 0 view .LVU48
 294 0046 114B     		ldr	r3, .L22+4
 295 0048 9968     		ldr	r1, [r3, #8]
 296              		.loc 1 231 21 view .LVU49
 297 004a 02F5C142 		add	r2, r2, #24704
ARM GAS  /tmp/cckIaVSD.s 			page 10


 298 004e 0832     		adds	r2, r2, #8
 299 0050 1160     		str	r1, [r2]
 232:Core/Src/stm32f4xx_it.c ****     // set adress
 233:Core/Src/stm32f4xx_it.c ****     DMA2_Stream5->M0AR = VGA.start_adr;
 300              		.loc 1 233 5 is_stmt 1 view .LVU50
 301              		.loc 1 233 29 is_stmt 0 view .LVU51
 302 0052 5968     		ldr	r1, [r3, #4]
 303              		.loc 1 233 24 view .LVU52
 304 0054 D160     		str	r1, [r2, #12]
 234:Core/Src/stm32f4xx_it.c ****     // Timer1 start
 235:Core/Src/stm32f4xx_it.c ****     TIM1->CR1 |= TIM_CR1_CEN; // __HAL_TIM_ENABLE(&htim1); // too slow?
 305              		.loc 1 235 5 is_stmt 1 view .LVU53
 306              		.loc 1 235 15 is_stmt 0 view .LVU54
 307 0056 1049     		ldr	r1, .L22+16
 308 0058 0A68     		ldr	r2, [r1]
 309 005a 42F00102 		orr	r2, r2, #1
 310 005e 0A60     		str	r2, [r1]
 236:Core/Src/stm32f4xx_it.c ****     // DMA2 enable
 237:Core/Src/stm32f4xx_it.c ****     __HAL_DMA_ENABLE(&hdma_tim1_up);
 311              		.loc 1 237 5 is_stmt 1 view .LVU55
 312 0060 0E4A     		ldr	r2, .L22+20
 313 0062 1168     		ldr	r1, [r2]
 314 0064 0A68     		ldr	r2, [r1]
 315 0066 42F00102 		orr	r2, r2, #1
 316 006a 0A60     		str	r2, [r1]
 238:Core/Src/stm32f4xx_it.c ****     // Test Adrespointer for high
 239:Core/Src/stm32f4xx_it.c ****     if(VGA.hsync_cnt & 0x01)
 317              		.loc 1 239 5 view .LVU56
 318              		.loc 1 239 11 is_stmt 0 view .LVU57
 319 006c 1B88     		ldrh	r3, [r3]
 320              		.loc 1 239 7 view .LVU58
 321 006e 13F0010F 		tst	r3, #1
 322 0072 04D0     		beq	.L15
 240:Core/Src/stm32f4xx_it.c ****       VGA.start_adr += (VGA_DISPLAY_X + 1); // inc after Hsync
 323              		.loc 1 240 7 is_stmt 1 view .LVU59
 324              		.loc 1 240 21 is_stmt 0 view .LVU60
 325 0074 054A     		ldr	r2, .L22+4
 326 0076 5368     		ldr	r3, [r2, #4]
 327 0078 03F24113 		addw	r3, r3, #321
 328 007c 5360     		str	r3, [r2, #4]
 329              	.L15:
 241:Core/Src/stm32f4xx_it.c ****   }
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 243:Core/Src/stm32f4xx_it.c **** }
 330              		.loc 1 243 1 view .LVU61
 331 007e 10BD     		pop	{r4, pc}
 332              	.L21:
 223:Core/Src/stm32f4xx_it.c **** 
 333              		.loc 1 223 71 view .LVU62
 334 0080 4FF08051 		mov	r1, #268435456
 335 0084 D8E7     		b	.L17
 336              	.L23:
 337 0086 00BF     		.align	2
 338              	.L22:
 339 0088 00000000 		.word	htim2
 340 008c 00000000 		.word	VGA
 341 0090 00000000 		.word	VGA_RAM1
ARM GAS  /tmp/cckIaVSD.s 			page 11


 342 0094 00040240 		.word	1073873920
 343 0098 00000140 		.word	1073807360
 344 009c 00000000 		.word	hdma_tim1_up
 345              		.cfi_endproc
 346              	.LFE139:
 348              		.section	.text.DMA2_Stream5_IRQHandler,"ax",%progbits
 349              		.align	1
 350              		.global	DMA2_Stream5_IRQHandler
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	DMA2_Stream5_IRQHandler:
 357              	.LFB140:
 244:Core/Src/stm32f4xx_it.c **** 
 245:Core/Src/stm32f4xx_it.c **** /**
 246:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream5 global interrupt.
 247:Core/Src/stm32f4xx_it.c ****   */
 248:Core/Src/stm32f4xx_it.c **** void DMA2_Stream5_IRQHandler(void)
 249:Core/Src/stm32f4xx_it.c **** {
 358              		.loc 1 249 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362 0000 08B5     		push	{r3, lr}
 363              	.LCFI2:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 250:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
 251:Core/Src/stm32f4xx_it.c **** 
 252:Core/Src/stm32f4xx_it.c ****   // if (__HAL_DMA_GET_IT_SOURCE(&hdma_tim1_up, DMA_IT_TC)) // not needed?
 253:Core/Src/stm32f4xx_it.c ****   // {
 254:Core/Src/stm32f4xx_it.c ****     // Timer1 stop
 255:Core/Src/stm32f4xx_it.c ****     __HAL_TIM_DISABLE(&htim1);
 367              		.loc 1 255 5 view .LVU64
 368              		.loc 1 255 5 view .LVU65
 369 0002 0C4B     		ldr	r3, .L27
 370 0004 1B68     		ldr	r3, [r3]
 371 0006 196A     		ldr	r1, [r3, #32]
 372 0008 41F21112 		movw	r2, #4369
 373 000c 1142     		tst	r1, r2
 374 000e 08D1     		bne	.L25
 375              		.loc 1 255 5 discriminator 1 view .LVU66
 376 0010 196A     		ldr	r1, [r3, #32]
 377 0012 40F24442 		movw	r2, #1092
 378 0016 1142     		tst	r1, r2
 379 0018 03D1     		bne	.L25
 380              		.loc 1 255 5 discriminator 3 view .LVU67
 381 001a 1A68     		ldr	r2, [r3]
 382 001c 22F00102 		bic	r2, r2, #1
 383 0020 1A60     		str	r2, [r3]
 384              	.L25:
 385              		.loc 1 255 5 discriminator 5 view .LVU68
 256:Core/Src/stm32f4xx_it.c ****     // DMA2 disable
 257:Core/Src/stm32f4xx_it.c ****     // __HAL_DMA_DISABLE(&hdma_tim1_up); // not needed?
 258:Core/Src/stm32f4xx_it.c ****     // switch on black
ARM GAS  /tmp/cckIaVSD.s 			page 12


 259:Core/Src/stm32f4xx_it.c ****     GPIOE->BSRR = VGA_GPIO_HINIBBLE << 16u;
 386              		.loc 1 259 5 discriminator 5 view .LVU69
 387              		.loc 1 259 17 is_stmt 0 discriminator 5 view .LVU70
 388 0022 054B     		ldr	r3, .L27+4
 389 0024 4FF07F42 		mov	r2, #-16777216
 390 0028 9A61     		str	r2, [r3, #24]
 260:Core/Src/stm32f4xx_it.c ****   // }
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 0 */
 263:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_up);
 391              		.loc 1 263 3 is_stmt 1 discriminator 5 view .LVU71
 392 002a 0448     		ldr	r0, .L27+8
 393 002c FFF7FEFF 		bl	HAL_DMA_IRQHandler
 394              	.LVL2:
 264:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
 265:Core/Src/stm32f4xx_it.c **** 
 266:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 1 */
 267:Core/Src/stm32f4xx_it.c **** }
 395              		.loc 1 267 1 is_stmt 0 discriminator 5 view .LVU72
 396 0030 08BD     		pop	{r3, pc}
 397              	.L28:
 398 0032 00BF     		.align	2
 399              	.L27:
 400 0034 00000000 		.word	htim1
 401 0038 00100240 		.word	1073876992
 402 003c 00000000 		.word	hdma_tim1_up
 403              		.cfi_endproc
 404              	.LFE140:
 406              		.comm	VGA_RAM1,77040,4
 407              		.comm	VGA,12,4
 408              		.text
 409              	.Letext0:
 410              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 411              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 412              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 413              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 414              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 415              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 416              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 417              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 418              		.file 10 "Core/ub_lib/stm32_ub_vga_screen.h"
ARM GAS  /tmp/cckIaVSD.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cckIaVSD.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cckIaVSD.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cckIaVSD.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cckIaVSD.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cckIaVSD.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cckIaVSD.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cckIaVSD.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cckIaVSD.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cckIaVSD.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cckIaVSD.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cckIaVSD.s:223    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/cckIaVSD.s:230    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/cckIaVSD.s:339    .text.TIM2_IRQHandler:0000000000000088 $d
                            *COM*:000000000000000c VGA
                            *COM*:0000000000012cf0 VGA_RAM1
     /tmp/cckIaVSD.s:349    .text.DMA2_Stream5_IRQHandler:0000000000000000 $t
     /tmp/cckIaVSD.s:356    .text.DMA2_Stream5_IRQHandler:0000000000000000 DMA2_Stream5_IRQHandler
     /tmp/cckIaVSD.s:400    .text.DMA2_Stream5_IRQHandler:0000000000000034 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim2
hdma_tim1_up
HAL_DMA_IRQHandler
htim1
