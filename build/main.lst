ARM GAS  /tmp/cc28RWfo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB131:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   **
   7:Core/Src/main.c ****   ****************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.</center></h2>
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  14:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  15:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  16:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  17:Core/Src/main.c ****   *
  18:Core/Src/main.c ****   ******************************************************************************
  19:Core/Src/main.c ****   */
  20:Core/Src/main.c **** /* USER CODE END Header */
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "graphics.h"
  30:Core/Src/main.c **** #include <stdlib.h>
ARM GAS  /tmp/cc28RWfo.s 			page 2


  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** typedef struct
  37:Core/Src/main.c **** {
  38:Core/Src/main.c ****   double x, y;
  39:Core/Src/main.c **** } Complex;
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** void madelbrot(int nx, int ny, int maxIter, float realMin, float realMax, float imagMin, float imag
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/cc28RWfo.s 			page 3


  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_DMA_Init();
  98:Core/Src/main.c ****   MX_TIM1_Init();
  99:Core/Src/main.c ****   MX_TIM2_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   UB_VGA_Screen_Init(); // Init VGA-Screen
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   API_Set_resolution(VGA_DISPLAY_X, VGA_DISPLAY_Y);
 105:Core/Src/main.c ****   API_Bind_set_pixel_callback((SetPixelCallback)UB_VGA_SetPixel);
 106:Core/Src/main.c ****   API_Bind_fill_screen_callback((SetFillScreenCallback)UB_VGA_FillScreen);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   API_Fill_screen(VGA_COL_WHITE);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   API_Draw_square(50, 50, 1, 1, VGA_COL_RED);
 111:Core/Src/main.c ****   API_Draw_line(10, 10, 20, 20, VGA_COL_MAGENTA);
 112:Core/Src/main.c ****   const int32_t posX[4] = {20, 50, 80, 150};
 113:Core/Src/main.c ****   const int32_t posY[4] = {30, 50, 10, 90};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   API_Draw_polygon(posX, posY, 4, VGA_COL_CYAN);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   API_Draw_circle(100, 100, 30, VGA_COL_GREEN);
 118:Core/Src/main.c ****   // madelbrot(VGA_DISPLAY_X, VGA_DISPLAY_Y, 100, -0.5,0.5,-2,2);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Infinite loop */
 123:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 124:Core/Src/main.c ****   while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
  29              		.loc 1 138 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
ARM GAS  /tmp/cc28RWfo.s 			page 4


  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 139 3 view .LVU1
  43              		.loc 1 139 22 is_stmt 0 view .LVU2
  44 0004 3022     		movs	r2, #48
  45 0006 0021     		movs	r1, #0
  46 0008 08A8     		add	r0, sp, #32
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 140 3 is_stmt 1 view .LVU3
  50              		.loc 1 140 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0394     		str	r4, [sp, #12]
  53 0012 0494     		str	r4, [sp, #16]
  54 0014 0594     		str	r4, [sp, #20]
  55 0016 0694     		str	r4, [sp, #24]
  56 0018 0794     		str	r4, [sp, #28]
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 144 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 144 3 view .LVU6
  60 001a 0194     		str	r4, [sp, #4]
  61              		.loc 1 144 3 view .LVU7
  62 001c 1C4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 144 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0193     		str	r3, [sp, #4]
  70              		.loc 1 144 3 view .LVU9
  71 002e 019B     		ldr	r3, [sp, #4]
  72              	.LBE2:
  73              		.loc 1 144 3 view .LVU10
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 145 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 145 3 view .LVU12
  77 0030 0294     		str	r4, [sp, #8]
  78              		.loc 1 145 3 view .LVU13
  79 0032 184B     		ldr	r3, .L3+4
  80 0034 1A68     		ldr	r2, [r3]
  81 0036 42F48042 		orr	r2, r2, #16384
  82 003a 1A60     		str	r2, [r3]
  83              		.loc 1 145 3 view .LVU14
  84 003c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc28RWfo.s 			page 5


  85 003e 03F48043 		and	r3, r3, #16384
  86 0042 0293     		str	r3, [sp, #8]
  87              		.loc 1 145 3 view .LVU15
  88 0044 029B     		ldr	r3, [sp, #8]
  89              	.LBE3:
  90              		.loc 1 145 3 view .LVU16
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  91              		.loc 1 149 3 view .LVU17
  92              		.loc 1 149 36 is_stmt 0 view .LVU18
  93 0046 0123     		movs	r3, #1
  94 0048 0893     		str	r3, [sp, #32]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  95              		.loc 1 150 3 is_stmt 1 view .LVU19
  96              		.loc 1 150 30 is_stmt 0 view .LVU20
  97 004a 4FF48033 		mov	r3, #65536
  98 004e 0993     		str	r3, [sp, #36]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  99              		.loc 1 151 3 is_stmt 1 view .LVU21
 100              		.loc 1 151 34 is_stmt 0 view .LVU22
 101 0050 0225     		movs	r5, #2
 102 0052 0E95     		str	r5, [sp, #56]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 152 3 is_stmt 1 view .LVU23
 104              		.loc 1 152 35 is_stmt 0 view .LVU24
 105 0054 4FF48003 		mov	r3, #4194304
 106 0058 0F93     		str	r3, [sp, #60]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 107              		.loc 1 153 3 is_stmt 1 view .LVU25
 108              		.loc 1 153 30 is_stmt 0 view .LVU26
 109 005a 0423     		movs	r3, #4
 110 005c 1093     		str	r3, [sp, #64]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 111              		.loc 1 154 3 is_stmt 1 view .LVU27
 112              		.loc 1 154 30 is_stmt 0 view .LVU28
 113 005e A823     		movs	r3, #168
 114 0060 1193     		str	r3, [sp, #68]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 155 3 is_stmt 1 view .LVU29
 116              		.loc 1 155 30 is_stmt 0 view .LVU30
 117 0062 1295     		str	r5, [sp, #72]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 118              		.loc 1 156 3 is_stmt 1 view .LVU31
 119              		.loc 1 156 30 is_stmt 0 view .LVU32
 120 0064 0723     		movs	r3, #7
 121 0066 1393     		str	r3, [sp, #76]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122              		.loc 1 157 3 is_stmt 1 view .LVU33
 123              		.loc 1 157 7 is_stmt 0 view .LVU34
 124 0068 08A8     		add	r0, sp, #32
 125 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL1:
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
ARM GAS  /tmp/cc28RWfo.s 			page 6


 161:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 127              		.loc 1 163 3 is_stmt 1 view .LVU35
 128              		.loc 1 163 31 is_stmt 0 view .LVU36
 129 006e 0F23     		movs	r3, #15
 130 0070 0393     		str	r3, [sp, #12]
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 131              		.loc 1 165 3 is_stmt 1 view .LVU37
 132              		.loc 1 165 34 is_stmt 0 view .LVU38
 133 0072 0495     		str	r5, [sp, #16]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 134              		.loc 1 166 3 is_stmt 1 view .LVU39
 135              		.loc 1 166 35 is_stmt 0 view .LVU40
 136 0074 0594     		str	r4, [sp, #20]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 137              		.loc 1 167 3 is_stmt 1 view .LVU41
 138              		.loc 1 167 36 is_stmt 0 view .LVU42
 139 0076 4FF4A053 		mov	r3, #5120
 140 007a 0693     		str	r3, [sp, #24]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 141              		.loc 1 168 3 is_stmt 1 view .LVU43
 142              		.loc 1 168 36 is_stmt 0 view .LVU44
 143 007c 4FF48053 		mov	r3, #4096
 144 0080 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 145              		.loc 1 170 3 is_stmt 1 view .LVU45
 146              		.loc 1 170 7 is_stmt 0 view .LVU46
 147 0082 0521     		movs	r1, #5
 148 0084 03A8     		add	r0, sp, #12
 149 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 150              	.LVL2:
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** }
 151              		.loc 1 174 1 view .LVU47
 152 008a 15B0     		add	sp, sp, #84
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 008c 30BD     		pop	{r4, r5, pc}
 157              	.L4:
 158 008e 00BF     		.align	2
 159              	.L3:
 160 0090 00380240 		.word	1073887232
 161 0094 00700040 		.word	1073770496
 162              		.cfi_endproc
 163              	.LFE131:
 165              		.section	.text.main,"ax",%progbits
 166              		.align	1
 167              		.global	main
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
ARM GAS  /tmp/cc28RWfo.s 			page 7


 171              		.fpu fpv4-sp-d16
 173              	main:
 174              	.LFB130:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 175              		.loc 1 74 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ Volatile: function does not return.
 178              		@ args = 0, pretend = 0, frame = 32
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 00B5     		push	{lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 14, -4
 184 0002 8BB0     		sub	sp, sp, #44
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 48
  82:Core/Src/main.c **** 
 187              		.loc 1 82 3 view .LVU49
 188 0004 FFF7FEFF 		bl	HAL_Init
 189              	.LVL3:
  89:Core/Src/main.c **** 
 190              		.loc 1 89 3 view .LVU50
 191 0008 FFF7FEFF 		bl	SystemClock_Config
 192              	.LVL4:
  96:Core/Src/main.c ****   MX_DMA_Init();
 193              		.loc 1 96 3 view .LVU51
 194 000c FFF7FEFF 		bl	MX_GPIO_Init
 195              	.LVL5:
  97:Core/Src/main.c ****   MX_TIM1_Init();
 196              		.loc 1 97 3 view .LVU52
 197 0010 FFF7FEFF 		bl	MX_DMA_Init
 198              	.LVL6:
  98:Core/Src/main.c ****   MX_TIM2_Init();
 199              		.loc 1 98 3 view .LVU53
 200 0014 FFF7FEFF 		bl	MX_TIM1_Init
 201              	.LVL7:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 202              		.loc 1 99 3 view .LVU54
 203 0018 FFF7FEFF 		bl	MX_TIM2_Init
 204              	.LVL8:
 102:Core/Src/main.c **** 
 205              		.loc 1 102 3 view .LVU55
 206 001c FFF7FEFF 		bl	UB_VGA_Screen_Init
 207              	.LVL9:
 104:Core/Src/main.c ****   API_Bind_set_pixel_callback((SetPixelCallback)UB_VGA_SetPixel);
 208              		.loc 1 104 3 view .LVU56
 209 0020 F021     		movs	r1, #240
 210 0022 4FF4A070 		mov	r0, #320
 211 0026 FFF7FEFF 		bl	API_Set_resolution
 212              	.LVL10:
 105:Core/Src/main.c ****   API_Bind_fill_screen_callback((SetFillScreenCallback)UB_VGA_FillScreen);
 213              		.loc 1 105 3 view .LVU57
 214 002a 1948     		ldr	r0, .L8
 215 002c FFF7FEFF 		bl	API_Bind_set_pixel_callback
 216              	.LVL11:
 106:Core/Src/main.c **** 
 217              		.loc 1 106 3 view .LVU58
ARM GAS  /tmp/cc28RWfo.s 			page 8


 218 0030 1848     		ldr	r0, .L8+4
 219 0032 FFF7FEFF 		bl	API_Bind_fill_screen_callback
 220              	.LVL12:
 108:Core/Src/main.c **** 
 221              		.loc 1 108 3 view .LVU59
 222 0036 FF20     		movs	r0, #255
 223 0038 FFF7FEFF 		bl	API_Fill_screen
 224              	.LVL13:
 110:Core/Src/main.c ****   API_Draw_line(10, 10, 20, 20, VGA_COL_MAGENTA);
 225              		.loc 1 110 3 view .LVU60
 226 003c E023     		movs	r3, #224
 227 003e 0093     		str	r3, [sp]
 228 0040 0123     		movs	r3, #1
 229 0042 1A46     		mov	r2, r3
 230 0044 3221     		movs	r1, #50
 231 0046 0846     		mov	r0, r1
 232 0048 FFF7FEFF 		bl	API_Draw_square
 233              	.LVL14:
 111:Core/Src/main.c ****   const int32_t posX[4] = {20, 50, 80, 150};
 234              		.loc 1 111 3 view .LVU61
 235 004c E323     		movs	r3, #227
 236 004e 0093     		str	r3, [sp]
 237 0050 1423     		movs	r3, #20
 238 0052 1A46     		mov	r2, r3
 239 0054 0A21     		movs	r1, #10
 240 0056 0846     		mov	r0, r1
 241 0058 FFF7FEFF 		bl	API_Draw_line
 242              	.LVL15:
 112:Core/Src/main.c ****   const int32_t posY[4] = {30, 50, 10, 90};
 243              		.loc 1 112 3 view .LVU62
 112:Core/Src/main.c ****   const int32_t posY[4] = {30, 50, 10, 90};
 244              		.loc 1 112 17 is_stmt 0 view .LVU63
 245 005c 0E4C     		ldr	r4, .L8+8
 246 005e 06AD     		add	r5, sp, #24
 247 0060 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 248 0064 85E80F00 		stm	r5, {r0, r1, r2, r3}
 113:Core/Src/main.c **** 
 249              		.loc 1 113 3 is_stmt 1 view .LVU64
 113:Core/Src/main.c **** 
 250              		.loc 1 113 17 is_stmt 0 view .LVU65
 251 0068 02AE     		add	r6, sp, #8
 252 006a 1034     		adds	r4, r4, #16
 253 006c 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 254 0070 86E80F00 		stm	r6, {r0, r1, r2, r3}
 115:Core/Src/main.c **** 
 255              		.loc 1 115 3 is_stmt 1 view .LVU66
 256 0074 1F23     		movs	r3, #31
 257 0076 0422     		movs	r2, #4
 258 0078 3146     		mov	r1, r6
 259 007a 2846     		mov	r0, r5
 260 007c FFF7FEFF 		bl	API_Draw_polygon
 261              	.LVL16:
 117:Core/Src/main.c ****   // madelbrot(VGA_DISPLAY_X, VGA_DISPLAY_Y, 100, -0.5,0.5,-2,2);
 262              		.loc 1 117 3 view .LVU67
 263 0080 1C23     		movs	r3, #28
 264 0082 1E22     		movs	r2, #30
 265 0084 6421     		movs	r1, #100
ARM GAS  /tmp/cc28RWfo.s 			page 9


 266 0086 0846     		mov	r0, r1
 267 0088 FFF7FEFF 		bl	API_Draw_circle
 268              	.LVL17:
 269              	.L6:
 124:Core/Src/main.c ****   {
 270              		.loc 1 124 3 discriminator 1 view .LVU68
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 271              		.loc 1 129 3 discriminator 1 view .LVU69
 124:Core/Src/main.c ****   {
 272              		.loc 1 124 9 discriminator 1 view .LVU70
 273 008c FEE7     		b	.L6
 274              	.L9:
 275 008e 00BF     		.align	2
 276              	.L8:
 277 0090 00000000 		.word	UB_VGA_SetPixel
 278 0094 00000000 		.word	UB_VGA_FillScreen
 279 0098 00000000 		.word	.LANCHOR0
 280              		.cfi_endproc
 281              	.LFE130:
 283              		.global	__aeabi_dmul
 284              		.global	__aeabi_dsub
 285              		.global	__aeabi_dadd
 286              		.section	.text.complexSquare,"ax",%progbits
 287              		.align	1
 288              		.global	complexSquare
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	complexSquare:
 295              	.LFB132:
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 177:Core/Src/main.c **** Complex complexSquare(Complex c)
 178:Core/Src/main.c **** {
 296              		.loc 1 178 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 64
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 301              	.LCFI5:
 302              		.cfi_def_cfa_offset 28
 303              		.cfi_offset 4, -28
 304              		.cfi_offset 5, -24
 305              		.cfi_offset 6, -20
 306              		.cfi_offset 7, -16
 307              		.cfi_offset 8, -12
 308              		.cfi_offset 9, -8
 309              		.cfi_offset 14, -4
 310 0004 91B0     		sub	sp, sp, #68
 311              	.LCFI6:
 312              		.cfi_def_cfa_offset 96
 313 0006 55EC104B 		vmov	r4, r5, d0
 314 000a 57EC116B 		vmov	r6, r7, d1
 179:Core/Src/main.c ****   Complex cSq;
 315              		.loc 1 179 3 view .LVU72
 180:Core/Src/main.c ****   cSq.x = c.x * c.x - c.y * c.y;
ARM GAS  /tmp/cc28RWfo.s 			page 10


 316              		.loc 1 180 3 view .LVU73
 317              		.loc 1 180 15 is_stmt 0 view .LVU74
 318 000e 10EE102A 		vmov	r2, s0	@ int
 319 0012 2B46     		mov	r3, r5
 320 0014 10EE100A 		vmov	r0, s0	@ int
 321 0018 2946     		mov	r1, r5
 322 001a FFF7FEFF 		bl	__aeabi_dmul
 323              	.LVL18:
 324 001e 8046     		mov	r8, r0
 325 0020 8946     		mov	r9, r1
 326              		.loc 1 180 27 view .LVU75
 327 0022 3246     		mov	r2, r6
 328 0024 3B46     		mov	r3, r7
 329 0026 3046     		mov	r0, r6
 330 0028 3946     		mov	r1, r7
 331 002a FFF7FEFF 		bl	__aeabi_dmul
 332              	.LVL19:
 333 002e 0246     		mov	r2, r0
 334 0030 0B46     		mov	r3, r1
 335              		.loc 1 180 21 view .LVU76
 336 0032 4046     		mov	r0, r8
 337 0034 4946     		mov	r1, r9
 338 0036 FFF7FEFF 		bl	__aeabi_dsub
 339              	.LVL20:
 340              		.loc 1 180 9 view .LVU77
 341 003a CDE90801 		strd	r0, [sp, #32]
 181:Core/Src/main.c ****   cSq.y = 2 * c.x * c.y;
 342              		.loc 1 181 3 is_stmt 1 view .LVU78
 343              		.loc 1 181 13 is_stmt 0 view .LVU79
 344 003e 2246     		mov	r2, r4
 345 0040 2B46     		mov	r3, r5
 346 0042 2046     		mov	r0, r4
 347 0044 2946     		mov	r1, r5
 348 0046 FFF7FEFF 		bl	__aeabi_dadd
 349              	.LVL21:
 350 004a 0246     		mov	r2, r0
 351 004c 0B46     		mov	r3, r1
 352              		.loc 1 181 19 view .LVU80
 353 004e 3046     		mov	r0, r6
 354 0050 3946     		mov	r1, r7
 355 0052 FFF7FEFF 		bl	__aeabi_dmul
 356              	.LVL22:
 357              		.loc 1 181 9 view .LVU81
 358 0056 CDE90A01 		strd	r0, [sp, #40]
 182:Core/Src/main.c ****   return cSq;
 359              		.loc 1 182 3 is_stmt 1 view .LVU82
 360              		.loc 1 182 10 is_stmt 0 view .LVU83
 361 005a 08AB     		add	r3, sp, #32
 362 005c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 363 005e 10AC     		add	r4, sp, #64
 364 0060 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 183:Core/Src/main.c **** }
 365              		.loc 1 183 1 view .LVU84
 366 0064 9DED0C0B 		vldr.64	d0, [sp, #48]
 367 0068 9DED0E1B 		vldr.64	d1, [sp, #56]
 368 006c 11B0     		add	sp, sp, #68
 369              	.LCFI7:
ARM GAS  /tmp/cc28RWfo.s 			page 11


 370              		.cfi_def_cfa_offset 28
 371              		@ sp needed
 372 006e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 373              		.cfi_endproc
 374              	.LFE132:
 376              		.global	__aeabi_dcmple
 377              		.section	.text.iterate,"ax",%progbits
 378              		.align	1
 379              		.global	iterate
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	iterate:
 386              	.LVL23:
 387              	.LFB133:
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** int iterate(Complex zInit, int maxIter)
 186:Core/Src/main.c **** {
 388              		.loc 1 186 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 32
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		.loc 1 186 1 is_stmt 0 view .LVU86
 393 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 394              	.LCFI8:
 395              		.cfi_def_cfa_offset 20
 396              		.cfi_offset 4, -20
 397              		.cfi_offset 5, -16
 398              		.cfi_offset 6, -12
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 89B0     		sub	sp, sp, #36
 402              	.LCFI9:
 403              		.cfi_def_cfa_offset 56
 404 0004 0746     		mov	r7, r0
 405 0006 8DED000B 		vstr.64	d0, [sp]
 406 000a 8DED021B 		vstr.64	d1, [sp, #8]
 187:Core/Src/main.c ****   Complex z = zInit;
 407              		.loc 1 187 3 is_stmt 1 view .LVU87
 408              		.loc 1 187 11 is_stmt 0 view .LVU88
 409 000e 6B46     		mov	r3, sp
 410 0010 0FCB     		ldm	r3, {r0, r1, r2, r3}
 411              	.LVL24:
 412              		.loc 1 187 11 view .LVU89
 413 0012 08AC     		add	r4, sp, #32
 414 0014 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 188:Core/Src/main.c ****   int cnt = 0;
 415              		.loc 1 188 3 is_stmt 1 view .LVU90
 416              	.LVL25:
 189:Core/Src/main.c ****   while ((z.x * z.x + z.y * z.y <= 4) && (cnt < maxIter))
 417              		.loc 1 189 3 view .LVU91
 188:Core/Src/main.c ****   int cnt = 0;
 418              		.loc 1 188 7 is_stmt 0 view .LVU92
 419 0018 0026     		movs	r6, #0
 420              	.LVL26:
 421              	.L13:
ARM GAS  /tmp/cc28RWfo.s 			page 12


 422              		.loc 1 189 9 is_stmt 1 view .LVU93
 423              		.loc 1 189 12 is_stmt 0 view .LVU94
 424 001a DDE90401 		ldrd	r0, [sp, #16]
 425              		.loc 1 189 15 view .LVU95
 426 001e 0246     		mov	r2, r0
 427 0020 0B46     		mov	r3, r1
 428 0022 FFF7FEFF 		bl	__aeabi_dmul
 429              	.LVL27:
 430 0026 0446     		mov	r4, r0
 431 0028 0D46     		mov	r5, r1
 432              		.loc 1 189 24 view .LVU96
 433 002a DDE90601 		ldrd	r0, [sp, #24]
 434              		.loc 1 189 27 view .LVU97
 435 002e 0246     		mov	r2, r0
 436 0030 0B46     		mov	r3, r1
 437 0032 FFF7FEFF 		bl	__aeabi_dmul
 438              	.LVL28:
 439 0036 0246     		mov	r2, r0
 440 0038 0B46     		mov	r3, r1
 441              		.loc 1 189 21 view .LVU98
 442 003a 2046     		mov	r0, r4
 443 003c 2946     		mov	r1, r5
 444 003e FFF7FEFF 		bl	__aeabi_dadd
 445              	.LVL29:
 446              		.loc 1 189 9 view .LVU99
 447 0042 0022     		movs	r2, #0
 448 0044 114B     		ldr	r3, .L19
 449 0046 FFF7FEFF 		bl	__aeabi_dcmple
 450              	.LVL30:
 451 004a D8B1     		cbz	r0, .L12
 452              		.loc 1 189 39 discriminator 1 view .LVU100
 453 004c BE42     		cmp	r6, r7
 454 004e 19DA     		bge	.L12
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     z = complexSquare(z);
 455              		.loc 1 191 5 is_stmt 1 view .LVU101
 456              		.loc 1 191 9 is_stmt 0 view .LVU102
 457 0050 9DED040B 		vldr.64	d0, [sp, #16]
 458 0054 9DED061B 		vldr.64	d1, [sp, #24]
 459 0058 FFF7FEFF 		bl	complexSquare
 460              	.LVL31:
 461 005c 51EC100B 		vmov	r0, r1, d0
 462 0060 55EC114B 		vmov	r4, r5, d1
 192:Core/Src/main.c ****     z.x += zInit.x;
 463              		.loc 1 192 5 is_stmt 1 view .LVU103
 464              		.loc 1 192 9 is_stmt 0 view .LVU104
 465 0064 DDE90023 		ldrd	r2, [sp]
 466 0068 FFF7FEFF 		bl	__aeabi_dadd
 467              	.LVL32:
 468 006c CDE90401 		strd	r0, [sp, #16]
 193:Core/Src/main.c ****     z.y += zInit.y;
 469              		.loc 1 193 5 is_stmt 1 view .LVU105
 470              		.loc 1 193 9 is_stmt 0 view .LVU106
 471 0070 DDE90223 		ldrd	r2, [sp, #8]
 472 0074 2046     		mov	r0, r4
 473 0076 2946     		mov	r1, r5
 474 0078 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  /tmp/cc28RWfo.s 			page 13


 475              	.LVL33:
 476 007c CDE90601 		strd	r0, [sp, #24]
 194:Core/Src/main.c ****     cnt++;
 477              		.loc 1 194 5 is_stmt 1 view .LVU107
 478              		.loc 1 194 8 is_stmt 0 view .LVU108
 479 0080 0136     		adds	r6, r6, #1
 480              	.LVL34:
 481              		.loc 1 194 8 view .LVU109
 482 0082 CAE7     		b	.L13
 483              	.L12:
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c ****   return cnt;
 197:Core/Src/main.c **** }
 484              		.loc 1 197 1 view .LVU110
 485 0084 3046     		mov	r0, r6
 486 0086 09B0     		add	sp, sp, #36
 487              	.LCFI10:
 488              		.cfi_def_cfa_offset 20
 489              		@ sp needed
 490 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 491              	.LVL35:
 492              	.L20:
 493              		.loc 1 197 1 view .LVU111
 494 008a 00BF     		.align	2
 495              	.L19:
 496 008c 00001040 		.word	1074790400
 497              		.cfi_endproc
 498              	.LFE133:
 500              		.global	__aeabi_f2d
 501              		.section	.text.madelbrot,"ax",%progbits
 502              		.align	1
 503              		.global	madelbrot
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu fpv4-sp-d16
 509              	madelbrot:
 510              	.LVL36:
 511              	.LFB134:
 198:Core/Src/main.c **** void madelbrot(int nx, int ny, int maxIter, float realMin, float realMax, float imagMin, float imag
 199:Core/Src/main.c **** {
 512              		.loc 1 199 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 16
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		.loc 1 199 1 is_stmt 0 view .LVU113
 517 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 518              	.LCFI11:
 519              		.cfi_def_cfa_offset 36
 520              		.cfi_offset 4, -36
 521              		.cfi_offset 5, -32
 522              		.cfi_offset 6, -28
 523              		.cfi_offset 7, -24
 524              		.cfi_offset 8, -20
 525              		.cfi_offset 9, -16
 526              		.cfi_offset 10, -12
 527              		.cfi_offset 11, -8
ARM GAS  /tmp/cc28RWfo.s 			page 14


 528              		.cfi_offset 14, -4
 529 0004 85B0     		sub	sp, sp, #20
 530              	.LCFI12:
 531              		.cfi_def_cfa_offset 56
 532 0006 8246     		mov	r10, r0
 533 0008 0F46     		mov	r7, r1
 534 000a 1546     		mov	r5, r2
 535 000c 11EE10BA 		vmov	fp, s2
 200:Core/Src/main.c ****   float realInc = (realMax - realMin) / nx;
 536              		.loc 1 200 3 is_stmt 1 view .LVU114
 537              		.loc 1 200 28 is_stmt 0 view .LVU115
 538 0010 70EEC00A 		vsub.f32	s1, s1, s0
 539              	.LVL37:
 540              		.loc 1 200 39 view .LVU116
 541 0014 07EE900A 		vmov	s15, r0	@ int
 542 0018 F8EEE77A 		vcvt.f32.s32	s15, s15
 543              		.loc 1 200 9 view .LVU117
 544 001c C0EEA77A 		vdiv.f32	s15, s1, s15
 545 0020 17EE909A 		vmov	r9, s15
 546              	.LVL38:
 201:Core/Src/main.c ****   float imagInc = (imagMax - imagMin) / ny;
 547              		.loc 1 201 3 is_stmt 1 view .LVU118
 548              		.loc 1 201 28 is_stmt 0 view .LVU119
 549 0024 71EEC11A 		vsub.f32	s3, s3, s2
 550              	.LVL39:
 551              		.loc 1 201 39 view .LVU120
 552 0028 07EE901A 		vmov	s15, r1	@ int
 553 002c F8EEE77A 		vcvt.f32.s32	s15, s15
 554              		.loc 1 201 9 view .LVU121
 555 0030 C1EEA77A 		vdiv.f32	s15, s3, s15
 556 0034 17EE908A 		vmov	r8, s15
 557              	.LVL40:
 202:Core/Src/main.c ****   static uint8_t color = VGA_COL_BLACK;
 558              		.loc 1 202 3 is_stmt 1 view .LVU122
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   Complex z;
 559              		.loc 1 204 3 view .LVU123
 205:Core/Src/main.c ****   int x, y;
 560              		.loc 1 205 3 view .LVU124
 206:Core/Src/main.c ****   int cnt;
 561              		.loc 1 206 3 view .LVU125
 207:Core/Src/main.c ****   for (x = 0, z.x = realMin; x < nx; x++, z.x += realInc)
 562              		.loc 1 207 3 view .LVU126
 563              		.loc 1 207 19 is_stmt 0 view .LVU127
 564 0038 10EE100A 		vmov	r0, s0
 565              	.LVL41:
 566              		.loc 1 207 19 view .LVU128
 567 003c FFF7FEFF 		bl	__aeabi_f2d
 568              	.LVL42:
 569              		.loc 1 207 19 view .LVU129
 570 0040 CDE90001 		strd	r0, [sp]
 571              		.loc 1 207 10 view .LVU130
 572 0044 0026     		movs	r6, #0
 573              		.loc 1 207 3 view .LVU131
 574 0046 2EE0     		b	.L22
 575              	.LVL43:
 576              	.L24:
ARM GAS  /tmp/cc28RWfo.s 			page 15


 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 209:Core/Src/main.c ****     {
 210:Core/Src/main.c ****       cnt = iterate(z, maxIter);
 211:Core/Src/main.c ****       if (cnt == maxIter)
 212:Core/Src/main.c ****         color = VGA_COL_BLACK;
 213:Core/Src/main.c ****       else
 214:Core/Src/main.c ****       {
 215:Core/Src/main.c ****         color = (uint8_t)cnt;
 577              		.loc 1 215 9 is_stmt 1 view .LVU132
 578              		.loc 1 215 15 is_stmt 0 view .LVU133
 579 0048 1D4B     		ldr	r3, .L31
 580 004a 1870     		strb	r0, [r3]
 581              	.L25:
 216:Core/Src/main.c ****       }
 217:Core/Src/main.c ****       API_Set_pixel(x, y, color);
 582              		.loc 1 217 7 is_stmt 1 discriminator 2 view .LVU134
 583 004c 1C4B     		ldr	r3, .L31
 584 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 585 0050 2146     		mov	r1, r4
 586 0052 3046     		mov	r0, r6
 587              	.LVL44:
 588              		.loc 1 217 7 is_stmt 0 discriminator 2 view .LVU135
 589 0054 FFF7FEFF 		bl	API_Set_pixel
 590              	.LVL45:
 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 591              		.loc 1 208 40 is_stmt 1 discriminator 2 view .LVU136
 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 592              		.loc 1 208 41 is_stmt 0 discriminator 2 view .LVU137
 593 0058 0134     		adds	r4, r4, #1
 594              	.LVL46:
 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 595              		.loc 1 208 49 discriminator 2 view .LVU138
 596 005a 4046     		mov	r0, r8	@ float
 597 005c FFF7FEFF 		bl	__aeabi_f2d
 598              	.LVL47:
 599 0060 0246     		mov	r2, r0
 600 0062 0B46     		mov	r3, r1
 601 0064 DDE90201 		ldrd	r0, [sp, #8]
 602 0068 FFF7FEFF 		bl	__aeabi_dadd
 603              	.LVL48:
 604 006c CDE90201 		strd	r0, [sp, #8]
 605              	.LVL49:
 606              	.L23:
 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 607              		.loc 1 208 32 is_stmt 1 discriminator 1 view .LVU139
 208:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 608              		.loc 1 208 5 is_stmt 0 discriminator 1 view .LVU140
 609 0070 BC42     		cmp	r4, r7
 610 0072 0CDA     		bge	.L29
 210:Core/Src/main.c ****       if (cnt == maxIter)
 611              		.loc 1 210 7 is_stmt 1 view .LVU141
 210:Core/Src/main.c ****       if (cnt == maxIter)
 612              		.loc 1 210 13 is_stmt 0 view .LVU142
 613 0074 2846     		mov	r0, r5
 614 0076 9DED000B 		vldr.64	d0, [sp]
 615 007a 9DED021B 		vldr.64	d1, [sp, #8]
 616 007e FFF7FEFF 		bl	iterate
ARM GAS  /tmp/cc28RWfo.s 			page 16


 617              	.LVL50:
 211:Core/Src/main.c ****         color = VGA_COL_BLACK;
 618              		.loc 1 211 7 is_stmt 1 view .LVU143
 211:Core/Src/main.c ****         color = VGA_COL_BLACK;
 619              		.loc 1 211 10 is_stmt 0 view .LVU144
 620 0082 8542     		cmp	r5, r0
 621 0084 E0D1     		bne	.L24
 212:Core/Src/main.c ****       else
 622              		.loc 1 212 9 is_stmt 1 view .LVU145
 212:Core/Src/main.c ****       else
 623              		.loc 1 212 15 is_stmt 0 view .LVU146
 624 0086 0E4B     		ldr	r3, .L31
 625 0088 0022     		movs	r2, #0
 626 008a 1A70     		strb	r2, [r3]
 627 008c DEE7     		b	.L25
 628              	.LVL51:
 629              	.L29:
 207:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 630              		.loc 1 207 38 is_stmt 1 discriminator 2 view .LVU147
 207:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 631              		.loc 1 207 39 is_stmt 0 discriminator 2 view .LVU148
 632 008e 0136     		adds	r6, r6, #1
 633              	.LVL52:
 207:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 634              		.loc 1 207 47 discriminator 2 view .LVU149
 635 0090 4846     		mov	r0, r9	@ float
 636 0092 FFF7FEFF 		bl	__aeabi_f2d
 637              	.LVL53:
 638 0096 0246     		mov	r2, r0
 639 0098 0B46     		mov	r3, r1
 640 009a DDE90001 		ldrd	r0, [sp]
 641 009e FFF7FEFF 		bl	__aeabi_dadd
 642              	.LVL54:
 643 00a2 CDE90001 		strd	r0, [sp]
 644              	.LVL55:
 645              	.L22:
 207:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 646              		.loc 1 207 30 is_stmt 1 discriminator 1 view .LVU150
 207:Core/Src/main.c ****     for (y = 0, z.y = imagMin; y < ny; y++, z.y += imagInc)
 647              		.loc 1 207 3 is_stmt 0 discriminator 1 view .LVU151
 648 00a6 5645     		cmp	r6, r10
 649 00a8 06DA     		bge	.L30
 208:Core/Src/main.c ****     {
 650              		.loc 1 208 5 is_stmt 1 view .LVU152
 651              	.LVL56:
 208:Core/Src/main.c ****     {
 652              		.loc 1 208 21 is_stmt 0 view .LVU153
 653 00aa 5846     		mov	r0, fp	@ float
 654 00ac FFF7FEFF 		bl	__aeabi_f2d
 655              	.LVL57:
 656 00b0 CDE90201 		strd	r0, [sp, #8]
 208:Core/Src/main.c ****     {
 657              		.loc 1 208 12 view .LVU154
 658 00b4 0024     		movs	r4, #0
 208:Core/Src/main.c ****     {
 659              		.loc 1 208 5 view .LVU155
 660 00b6 DBE7     		b	.L23
ARM GAS  /tmp/cc28RWfo.s 			page 17


 661              	.LVL58:
 662              	.L30:
 218:Core/Src/main.c ****     }
 219:Core/Src/main.c **** }
 663              		.loc 1 219 1 view .LVU156
 664 00b8 05B0     		add	sp, sp, #20
 665              	.LCFI13:
 666              		.cfi_def_cfa_offset 36
 667              		@ sp needed
 668 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 669              	.LVL59:
 670              	.L32:
 671              		.loc 1 219 1 view .LVU157
 672 00be 00BF     		.align	2
 673              	.L31:
 674 00c0 00000000 		.word	.LANCHOR1
 675              		.cfi_endproc
 676              	.LFE134:
 678              		.section	.text.Error_Handler,"ax",%progbits
 679              		.align	1
 680              		.global	Error_Handler
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	Error_Handler:
 687              	.LFB135:
 220:Core/Src/main.c **** /* USER CODE END 4 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void Error_Handler(void)
 227:Core/Src/main.c **** {
 688              		.loc 1 227 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 228:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 229:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 232:Core/Src/main.c **** }
 693              		.loc 1 232 1 view .LVU159
 694 0000 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE135:
 698              		.comm	VGA_RAM1,77040,4
 699              		.comm	VGA,12,4
 700              		.section	.rodata
 701              		.align	2
 702              		.set	.LANCHOR0,. + 0
 703              	.LC0:
 704 0000 14000000 		.word	20
 705 0004 32000000 		.word	50
ARM GAS  /tmp/cc28RWfo.s 			page 18


 706 0008 50000000 		.word	80
 707 000c 96000000 		.word	150
 708              	.LC1:
 709 0010 1E000000 		.word	30
 710 0014 32000000 		.word	50
 711 0018 0A000000 		.word	10
 712 001c 5A000000 		.word	90
 713              		.section	.bss.color.9319,"aw",%nobits
 714              		.set	.LANCHOR1,. + 0
 717              	color.9319:
 718 0000 00       		.space	1
 719              		.text
 720              	.Letext0:
 721              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 722              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 723              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 724              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 725              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 726              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 727              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 728              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 729              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 730              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 731              		.file 12 "Core/ub_lib/stm32_ub_vga_screen.h"
 732              		.file 13 "Core/Inc/tim.h"
 733              		.file 14 "EE_API_LIB/graphics.h"
 734              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 735              		.file 16 "/usr/include/newlib/sys/_types.h"
 736              		.file 17 "/usr/include/newlib/sys/reent.h"
 737              		.file 18 "/usr/include/newlib/sys/lock.h"
 738              		.file 19 "/usr/include/newlib/stdlib.h"
 739              		.file 20 "/usr/include/newlib/math.h"
 740              		.file 21 "Core/Inc/gpio.h"
 741              		.file 22 "Core/Inc/dma.h"
 742              		.file 23 "<built-in>"
ARM GAS  /tmp/cc28RWfo.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc28RWfo.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc28RWfo.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc28RWfo.s:160    .text.SystemClock_Config:0000000000000090 $d
     /tmp/cc28RWfo.s:166    .text.main:0000000000000000 $t
     /tmp/cc28RWfo.s:173    .text.main:0000000000000000 main
     /tmp/cc28RWfo.s:277    .text.main:0000000000000090 $d
     /tmp/cc28RWfo.s:287    .text.complexSquare:0000000000000000 $t
     /tmp/cc28RWfo.s:294    .text.complexSquare:0000000000000000 complexSquare
     /tmp/cc28RWfo.s:378    .text.iterate:0000000000000000 $t
     /tmp/cc28RWfo.s:385    .text.iterate:0000000000000000 iterate
     /tmp/cc28RWfo.s:496    .text.iterate:000000000000008c $d
     /tmp/cc28RWfo.s:502    .text.madelbrot:0000000000000000 $t
     /tmp/cc28RWfo.s:509    .text.madelbrot:0000000000000000 madelbrot
     /tmp/cc28RWfo.s:674    .text.madelbrot:00000000000000c0 $d
     /tmp/cc28RWfo.s:679    .text.Error_Handler:0000000000000000 $t
     /tmp/cc28RWfo.s:686    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000012cf0 VGA_RAM1
                            *COM*:000000000000000c VGA
     /tmp/cc28RWfo.s:701    .rodata:0000000000000000 $d
     /tmp/cc28RWfo.s:717    .bss.color.9319:0000000000000000 color.9319
     /tmp/cc28RWfo.s:718    .bss.color.9319:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM1_Init
MX_TIM2_Init
UB_VGA_Screen_Init
API_Set_resolution
API_Bind_set_pixel_callback
API_Bind_fill_screen_callback
API_Fill_screen
API_Draw_square
API_Draw_line
API_Draw_polygon
API_Draw_circle
UB_VGA_SetPixel
UB_VGA_FillScreen
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_f2d
API_Set_pixel
