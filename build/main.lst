ARM GAS  /tmp/ccfPZX0X.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB136:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "rtc.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  /tmp/ccfPZX0X.s 			page 2


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccfPZX0X.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   MX_RTC_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Init scheduler */
  97:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
  98:Core/Src/main.c ****   MX_FREERTOS_Init();
  99:Core/Src/main.c ****   /* Start scheduler */
 100:Core/Src/main.c ****   osKernelStart();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccfPZX0X.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 158:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 159:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /** Enables the Clock Security System
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   HAL_RCC_EnableCSS();
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE END 4 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void Error_Handler(void)
 177:Core/Src/main.c **** {
  29              		.loc 1 177 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 178:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 179:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 180:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 180 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccfPZX0X.s 			page 5


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccfPZX0X.s 			page 6


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /tmp/ccfPZX0X.s 			page 7


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 181:Core/Src/main.c ****   while (1)
  51              		.loc 1 181 3 discriminator 1 view .LVU4
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****   }
  52              		.loc 1 183 3 discriminator 1 view .LVU5
 181:Core/Src/main.c ****   while (1)
  53              		.loc 1 181 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE136:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB135:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 119 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 96
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfPZX0X.s 			page 8


  76 0002 99B0     		sub	sp, sp, #100
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 104
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 120 3 view .LVU8
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 120 22 is_stmt 0 view .LVU9
  81 0004 3022     		movs	r2, #48
  82 0006 0021     		movs	r1, #0
  83 0008 0DEB0200 		add	r0, sp, r2
  84 000c FFF7FEFF 		bl	memset
  85              	.LVL0:
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  86              		.loc 1 121 3 is_stmt 1 view .LVU10
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  87              		.loc 1 121 22 is_stmt 0 view .LVU11
  88 0010 0023     		movs	r3, #0
  89 0012 0793     		str	r3, [sp, #28]
  90 0014 0893     		str	r3, [sp, #32]
  91 0016 0993     		str	r3, [sp, #36]
  92 0018 0A93     		str	r3, [sp, #40]
  93 001a 0B93     		str	r3, [sp, #44]
 122:Core/Src/main.c **** 
  94              		.loc 1 122 3 is_stmt 1 view .LVU12
 122:Core/Src/main.c **** 
  95              		.loc 1 122 28 is_stmt 0 view .LVU13
  96 001c 0393     		str	r3, [sp, #12]
  97 001e 0493     		str	r3, [sp, #16]
  98 0020 0593     		str	r3, [sp, #20]
  99 0022 0693     		str	r3, [sp, #24]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 100              		.loc 1 126 3 is_stmt 1 view .LVU14
 101              	.LBB6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 102              		.loc 1 126 3 view .LVU15
 103 0024 0193     		str	r3, [sp, #4]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 104              		.loc 1 126 3 view .LVU16
 105 0026 284A     		ldr	r2, .L11
 106 0028 116C     		ldr	r1, [r2, #64]
 107 002a 41F08051 		orr	r1, r1, #268435456
 108 002e 1164     		str	r1, [r2, #64]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 109              		.loc 1 126 3 view .LVU17
 110 0030 126C     		ldr	r2, [r2, #64]
 111 0032 02F08052 		and	r2, r2, #268435456
 112 0036 0192     		str	r2, [sp, #4]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 113              		.loc 1 126 3 view .LVU18
 114 0038 019A     		ldr	r2, [sp, #4]
 115              	.LBE6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 116              		.loc 1 126 3 view .LVU19
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 117              		.loc 1 127 3 view .LVU20
 118              	.LBB7:
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/ccfPZX0X.s 			page 9


 119              		.loc 1 127 3 view .LVU21
 120 003a 0293     		str	r3, [sp, #8]
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121              		.loc 1 127 3 view .LVU22
 122 003c 234B     		ldr	r3, .L11+4
 123 003e 1A68     		ldr	r2, [r3]
 124 0040 42F48042 		orr	r2, r2, #16384
 125 0044 1A60     		str	r2, [r3]
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126              		.loc 1 127 3 view .LVU23
 127 0046 1B68     		ldr	r3, [r3]
 128 0048 03F48043 		and	r3, r3, #16384
 129 004c 0293     		str	r3, [sp, #8]
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130              		.loc 1 127 3 view .LVU24
 131 004e 029B     		ldr	r3, [sp, #8]
 132              	.LBE7:
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133              		.loc 1 127 3 view .LVU25
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134              		.loc 1 131 3 view .LVU26
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 135              		.loc 1 131 36 is_stmt 0 view .LVU27
 136 0050 0923     		movs	r3, #9
 137 0052 0C93     		str	r3, [sp, #48]
 132:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 138              		.loc 1 132 3 is_stmt 1 view .LVU28
 132:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 139              		.loc 1 132 30 is_stmt 0 view .LVU29
 140 0054 4FF48033 		mov	r3, #65536
 141 0058 0D93     		str	r3, [sp, #52]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142              		.loc 1 133 3 is_stmt 1 view .LVU30
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143              		.loc 1 133 30 is_stmt 0 view .LVU31
 144 005a 0123     		movs	r3, #1
 145 005c 1193     		str	r3, [sp, #68]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146              		.loc 1 134 3 is_stmt 1 view .LVU32
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 147              		.loc 1 134 34 is_stmt 0 view .LVU33
 148 005e 0223     		movs	r3, #2
 149 0060 1293     		str	r3, [sp, #72]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 150              		.loc 1 135 3 is_stmt 1 view .LVU34
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 151              		.loc 1 135 35 is_stmt 0 view .LVU35
 152 0062 4FF48002 		mov	r2, #4194304
 153 0066 1392     		str	r2, [sp, #76]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 154              		.loc 1 136 3 is_stmt 1 view .LVU36
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 155              		.loc 1 136 30 is_stmt 0 view .LVU37
 156 0068 0422     		movs	r2, #4
 157 006a 1492     		str	r2, [sp, #80]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 158              		.loc 1 137 3 is_stmt 1 view .LVU38
ARM GAS  /tmp/ccfPZX0X.s 			page 10


 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159              		.loc 1 137 30 is_stmt 0 view .LVU39
 160 006c A822     		movs	r2, #168
 161 006e 1592     		str	r2, [sp, #84]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 162              		.loc 1 138 3 is_stmt 1 view .LVU40
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 163              		.loc 1 138 30 is_stmt 0 view .LVU41
 164 0070 1693     		str	r3, [sp, #88]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165              		.loc 1 139 3 is_stmt 1 view .LVU42
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166              		.loc 1 139 30 is_stmt 0 view .LVU43
 167 0072 0723     		movs	r3, #7
 168 0074 1793     		str	r3, [sp, #92]
 140:Core/Src/main.c ****   {
 169              		.loc 1 140 3 is_stmt 1 view .LVU44
 140:Core/Src/main.c ****   {
 170              		.loc 1 140 7 is_stmt 0 view .LVU45
 171 0076 0CA8     		add	r0, sp, #48
 172 0078 FFF7FEFF 		bl	HAL_RCC_OscConfig
 173              	.LVL1:
 140:Core/Src/main.c ****   {
 174              		.loc 1 140 6 view .LVU46
 175 007c F0B9     		cbnz	r0, .L8
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 176              		.loc 1 146 3 is_stmt 1 view .LVU47
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 177              		.loc 1 146 31 is_stmt 0 view .LVU48
 178 007e 0F23     		movs	r3, #15
 179 0080 0793     		str	r3, [sp, #28]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 180              		.loc 1 148 3 is_stmt 1 view .LVU49
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181              		.loc 1 148 34 is_stmt 0 view .LVU50
 182 0082 0223     		movs	r3, #2
 183 0084 0893     		str	r3, [sp, #32]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 184              		.loc 1 149 3 is_stmt 1 view .LVU51
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 185              		.loc 1 149 35 is_stmt 0 view .LVU52
 186 0086 0023     		movs	r3, #0
 187 0088 0993     		str	r3, [sp, #36]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 188              		.loc 1 150 3 is_stmt 1 view .LVU53
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 189              		.loc 1 150 36 is_stmt 0 view .LVU54
 190 008a 4FF4A053 		mov	r3, #5120
 191 008e 0A93     		str	r3, [sp, #40]
 151:Core/Src/main.c **** 
 192              		.loc 1 151 3 is_stmt 1 view .LVU55
 151:Core/Src/main.c **** 
 193              		.loc 1 151 36 is_stmt 0 view .LVU56
 194 0090 4FF48053 		mov	r3, #4096
 195 0094 0B93     		str	r3, [sp, #44]
 153:Core/Src/main.c ****   {
 196              		.loc 1 153 3 is_stmt 1 view .LVU57
ARM GAS  /tmp/ccfPZX0X.s 			page 11


 153:Core/Src/main.c ****   {
 197              		.loc 1 153 7 is_stmt 0 view .LVU58
 198 0096 0521     		movs	r1, #5
 199 0098 07A8     		add	r0, sp, #28
 200 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 201              	.LVL2:
 153:Core/Src/main.c ****   {
 202              		.loc 1 153 6 view .LVU59
 203 009e 78B9     		cbnz	r0, .L9
 157:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 204              		.loc 1 157 3 is_stmt 1 view .LVU60
 157:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 205              		.loc 1 157 44 is_stmt 0 view .LVU61
 206 00a0 0223     		movs	r3, #2
 207 00a2 0393     		str	r3, [sp, #12]
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 208              		.loc 1 158 3 is_stmt 1 view .LVU62
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 209              		.loc 1 158 41 is_stmt 0 view .LVU63
 210 00a4 4FF40073 		mov	r3, #512
 211 00a8 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c ****   {
 212              		.loc 1 159 3 is_stmt 1 view .LVU64
 159:Core/Src/main.c ****   {
 213              		.loc 1 159 7 is_stmt 0 view .LVU65
 214 00aa 03A8     		add	r0, sp, #12
 215 00ac FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 216              	.LVL3:
 159:Core/Src/main.c ****   {
 217              		.loc 1 159 6 view .LVU66
 218 00b0 40B9     		cbnz	r0, .L10
 165:Core/Src/main.c **** }
 219              		.loc 1 165 3 is_stmt 1 view .LVU67
 220 00b2 FFF7FEFF 		bl	HAL_RCC_EnableCSS
 221              	.LVL4:
 166:Core/Src/main.c **** 
 222              		.loc 1 166 1 is_stmt 0 view .LVU68
 223 00b6 19B0     		add	sp, sp, #100
 224              	.LCFI2:
 225              		.cfi_remember_state
 226              		.cfi_def_cfa_offset 4
 227              		@ sp needed
 228 00b8 5DF804FB 		ldr	pc, [sp], #4
 229              	.L8:
 230              	.LCFI3:
 231              		.cfi_restore_state
 142:Core/Src/main.c ****   }
 232              		.loc 1 142 5 is_stmt 1 view .LVU69
 233 00bc FFF7FEFF 		bl	Error_Handler
 234              	.LVL5:
 235              	.L9:
 155:Core/Src/main.c ****   }
 236              		.loc 1 155 5 view .LVU70
 237 00c0 FFF7FEFF 		bl	Error_Handler
 238              	.LVL6:
 239              	.L10:
 161:Core/Src/main.c ****   }
ARM GAS  /tmp/ccfPZX0X.s 			page 12


 240              		.loc 1 161 5 view .LVU71
 241 00c4 FFF7FEFF 		bl	Error_Handler
 242              	.LVL7:
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 00c8 00380240 		.word	1073887232
 247 00cc 00700040 		.word	1073770496
 248              		.cfi_endproc
 249              	.LFE135:
 251              		.section	.text.main,"ax",%progbits
 252              		.align	1
 253              		.global	main
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	main:
 260              	.LFB134:
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 261              		.loc 1 68 1 view -0
 262              		.cfi_startproc
 263              		@ Volatile: function does not return.
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 271              		.loc 1 76 3 view .LVU73
 272 0002 FFF7FEFF 		bl	HAL_Init
 273              	.LVL8:
  83:Core/Src/main.c **** 
 274              		.loc 1 83 3 view .LVU74
 275 0006 FFF7FEFF 		bl	SystemClock_Config
 276              	.LVL9:
  90:Core/Src/main.c ****   MX_RTC_Init();
 277              		.loc 1 90 3 view .LVU75
 278 000a FFF7FEFF 		bl	MX_GPIO_Init
 279              	.LVL10:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 280              		.loc 1 91 3 view .LVU76
 281 000e FFF7FEFF 		bl	MX_RTC_Init
 282              	.LVL11:
  97:Core/Src/main.c ****   MX_FREERTOS_Init();
 283              		.loc 1 97 3 view .LVU77
 284 0012 FFF7FEFF 		bl	osKernelInitialize
 285              	.LVL12:
  98:Core/Src/main.c ****   /* Start scheduler */
 286              		.loc 1 98 3 view .LVU78
 287 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 288              	.LVL13:
 100:Core/Src/main.c **** 
 289              		.loc 1 100 3 view .LVU79
 290 001a FFF7FEFF 		bl	osKernelStart
ARM GAS  /tmp/ccfPZX0X.s 			page 13


 291              	.LVL14:
 292              	.L14:
 105:Core/Src/main.c ****   {
 293              		.loc 1 105 3 discriminator 1 view .LVU80
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 294              		.loc 1 110 3 discriminator 1 view .LVU81
 105:Core/Src/main.c ****   {
 295              		.loc 1 105 9 discriminator 1 view .LVU82
 296 001e FEE7     		b	.L14
 297              		.cfi_endproc
 298              	.LFE134:
 300              		.section	.text.assert_failed,"ax",%progbits
 301              		.align	1
 302              		.global	assert_failed
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	assert_failed:
 309              	.LVL15:
 310              	.LFB137:
 184:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 190:Core/Src/main.c ****   *         where the assert_param error has occurred.
 191:Core/Src/main.c ****   * @param  file: pointer to the source file name
 192:Core/Src/main.c ****   * @param  line: assert_param error line source number
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 196:Core/Src/main.c **** {
 311              		.loc 1 196 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 197:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 198:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 199:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 200:Core/Src/main.c ****   /* USER CODE END 6 */
 201:Core/Src/main.c **** }
 316              		.loc 1 201 1 view .LVU84
 317 0000 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE137:
 321              		.text
 322              	.Letext0:
 323              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 324              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 325              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 326              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 327              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 328              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 329              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  /tmp/ccfPZX0X.s 			page 14


 330              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 331              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 332              		.file 12 "Core/Inc/rtc.h"
 333              		.file 13 "Core/Inc/gpio.h"
 334              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 335              		.file 15 "<built-in>"
ARM GAS  /tmp/ccfPZX0X.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccfPZX0X.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccfPZX0X.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccfPZX0X.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccfPZX0X.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccfPZX0X.s:246    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/ccfPZX0X.s:252    .text.main:0000000000000000 $t
     /tmp/ccfPZX0X.s:259    .text.main:0000000000000000 main
     /tmp/ccfPZX0X.s:301    .text.assert_failed:0000000000000000 $t
     /tmp/ccfPZX0X.s:308    .text.assert_failed:0000000000000000 assert_failed

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_EnableCSS
HAL_Init
MX_GPIO_Init
MX_RTC_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
